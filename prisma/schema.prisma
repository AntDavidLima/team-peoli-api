// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Routine {
  id           Int       @id @default(autoincrement())
  name         String
  startDate    DateTime  @map("start_date") @db.Date
  endDate      DateTime? @map("end_date") @db.Date
  orientations String?
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")

  emphasis  MuscleGroup[]
  trainings Training[]

  @@map("routine")
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  name            String
  password        String
  phone           String   @db.VarChar(11)
  profilePhotoUrl String?  @map("profile_photo_url")
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")

  training Training[]
  workouts Workout[]

  @@map("user")
}

model Exercise {
  id                Int      @id @default(autoincrement())
  name              String
  executionVideoUrl String?  @map("execution_video_url")
  createdAt         DateTime @default(now()) @map("created_at")
  updatedAt         DateTime @updatedAt @map("updated_at")
  instructions      String?
  restTime          Int?     @map("rest_time")

  muscleGroups ExercisedMuscleGroup[]
  trainings    TrainingExercise[]
  workouts     WorkoutExercise[]

  @@map("exercise")
}

model MuscleGroup {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  exercises ExercisedMuscleGroup[]

  routine   Routine? @relation(fields: [routineId], references: [id])
  routineId Int?     @map("routine_id")

  @@map("muscle_group")
}

model ExercisedMuscleGroup {
  weight    Int      @db.SmallInt
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int      @map("exercise_id")

  muscleGroup   MuscleGroup @relation(fields: [muscleGroupId], references: [id])
  muscleGroupId Int         @map("muscle_group_id")

  @@id([exerciseId, muscleGroupId])
  @@map("exercised_muscle_group")
}

model Training {
  id        Int      @id @default(autoincrement())
  name      String?
  day       Day
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  routine   Routine? @relation(fields: [routineId], references: [id])
  routineId Int?     @map("routine_id")

  exercises TrainingExercise[]
  workouts  Workout[]
  students  User[]

  @@map("training")
}

model TrainingExercise {
  sets         Int      @db.SmallInt
  reps         Int      @db.SmallInt
  orientations String?
  restTime     Int?     @map("rest_time")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int      @map("exercise_id")

  training   Training @relation(fields: [trainingId], references: [id])
  trainingId Int      @map("training_id")

  @@id([exerciseId, trainingId])
  @@map("training_exercise")
}

model Workout {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  feedback  String?
  intensity Intensity
  startTime DateTime  @map("start_time")
  endTime   DateTime? @map("end_time")

  training   Training @relation(fields: [trainingId], references: [id])
  trainingId Int      @map("training_id")

  exercises WorkoutExercise[]

  student   User @relation(fields: [studentId], references: [id])
  studentId Int  @map("student_id")

  @@map("workout")
}

model WorkoutExercise {
  sets      Int      @db.SmallInt
  reps      Int      @db.SmallInt
  load      Int      @db.SmallInt
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int      @map("exercise_id")

  workout   Workout? @relation(fields: [workoutId], references: [id])
  workoutId Int      @map("workout_id")

  @@id([exerciseId, workoutId])
  @@map("workout_exercise")
}

enum Day {
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY

  @@map("day")
}

enum Intensity {
  LIGHT
  MODERATE
  VIGOROUS

  @@map("intensity")
}
